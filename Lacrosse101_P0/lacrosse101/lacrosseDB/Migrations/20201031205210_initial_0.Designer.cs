// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lacrosseDB;

namespace lacrosseDB.Migrations
{
    [DbContext(typeof(lacrosseContext))]
    [Migration("20201031205210_initial_0")]
    partial class initial_0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("lacrosseDB.Models.Balls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProdName")
                        .HasColumnType("text");

                    b.Property<int>("colorType")
                        .HasColumnType("integer");

                    b.Property<int>("locationId")
                        .HasColumnType("integer");

                    b.Property<int?>("locationsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("locationsId");

                    b.ToTable("Balls");
                });

            modelBuilder.Entity("lacrosseDB.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CustAddress")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("lacrosseDB.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ballId")
                        .HasColumnType("integer");

                    b.Property<int>("locationId")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("sticksId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ballId");

                    b.HasIndex("locationId");

                    b.HasIndex("sticksId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("lacrosseDB.Models.Locations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("StoreLocation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("lacrosseDB.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("lacrosseDB.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("CustomersId")
                        .HasColumnType("integer");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("OrderNum")
                        .HasColumnType("text");

                    b.Property<int>("Quanity")
                        .HasColumnType("integer");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("lacrosseDB.Models.Sticks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProdName")
                        .HasColumnType("text");

                    b.Property<int>("brandType")
                        .HasColumnType("integer");

                    b.Property<int>("locationId")
                        .HasColumnType("integer");

                    b.Property<int>("stickType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("locationId");

                    b.ToTable("Sticks");
                });

            modelBuilder.Entity("lacrosseDB.Models.Balls", b =>
                {
                    b.HasOne("lacrosseDB.Models.Locations", "locations")
                        .WithMany()
                        .HasForeignKey("locationsId");
                });

            modelBuilder.Entity("lacrosseDB.Models.Inventory", b =>
                {
                    b.HasOne("lacrosseDB.Models.Balls", "ball")
                        .WithMany()
                        .HasForeignKey("ballId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lacrosseDB.Models.Locations", "location")
                        .WithMany("inventory")
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
                        .WithMany()
                        .HasForeignKey("sticksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lacrosseDB.Models.Manager", b =>
                {
                    b.HasOne("lacrosseDB.Models.Locations", "location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lacrosseDB.Models.Orders", b =>
                {
                    b.HasOne("lacrosseDB.Models.Customer", null)
                        .WithMany("orders")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("lacrosseDB.Models.Sticks", b =>
                {
                    b.HasOne("lacrosseDB.Models.Locations", "location")
                        .WithMany()
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
