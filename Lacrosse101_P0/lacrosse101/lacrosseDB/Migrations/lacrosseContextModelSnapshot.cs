// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lacrosseDB;

namespace lacrosseDB.Migrations
{
    [DbContext(typeof(lacrosseContext))]
    partial class lacrosseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("lacrosseDB.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("custId")
                        .HasColumnType("integer");

                    b.Property<int?>("customerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("customerId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("lacrosseDB.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("cartId")
                        .HasColumnType("integer");

                    b.Property<int>("custId")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("stickId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("cartId");

                    b.HasIndex("stickId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("lacrosseDB.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("lacrosseDB.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("stickId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("stickId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("lacrosseDB.Models.Locations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("StoreLocation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("lacrosseDB.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("lacrosseDB.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CustomersId")
                        .HasColumnType("integer");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision");

                    b.Property<int?>("customerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("dateOfOrder")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("customerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("lacrosseDB.Models.Sticks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("lacrosseDB.Models.lineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("orderId")
                        .HasColumnType("integer");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("stickId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("orderId");

                    b.HasIndex("stickId");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("lacrosseDB.Models.Cart", b =>
                {
                    b.HasOne("lacrosseDB.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerId");
                });

            modelBuilder.Entity("lacrosseDB.Models.CartItem", b =>
                {
                    b.HasOne("lacrosseDB.Models.Cart", "cart")
                        .WithMany("cartItem")
                        .HasForeignKey("cartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
                        .WithMany()
                        .HasForeignKey("stickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lacrosseDB.Models.Inventory", b =>
                {
                    b.HasOne("lacrosseDB.Models.Locations", "location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
                        .WithMany()
                        .HasForeignKey("stickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lacrosseDB.Models.Manager", b =>
                {
                    b.HasOne("lacrosseDB.Models.Locations", "location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lacrosseDB.Models.Orders", b =>
                {
                    b.HasOne("lacrosseDB.Models.Locations", "location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lacrosseDB.Models.Customer", "customer")
                        .WithMany("orders")
                        .HasForeignKey("customerId");
                });

            modelBuilder.Entity("lacrosseDB.Models.Sticks", b =>
                {
                    b.HasOne("lacrosseDB.Models.Orders", null)
                        .WithMany("ItemsToBuy")
                        .HasForeignKey("OrdersId");
                });

            modelBuilder.Entity("lacrosseDB.Models.lineItem", b =>
                {
                    b.HasOne("lacrosseDB.Models.Orders", "order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
                        .WithMany()
                        .HasForeignKey("stickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
